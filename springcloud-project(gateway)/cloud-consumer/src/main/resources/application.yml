##端口配置
server:
  port: 7001
  tomcat:
    uri-encoding: utf-8

#spring相关
spring:
 http:
  encoding:
    charset: UTF-8
    enabled: true
    force: true

 application:
   name: cloud-consumer
 datasource:
   url: jdbc:mysql://127.0.0.1:3306/ams?characterEncoding=UTF-8
   username: root
   password: 123456
   driver-class-name: com.mysql.jdbc.Driver
   type: com.alibaba.druid.pool.DruidDataSource

mybatis:
   mapper-locations: classpath:mapper/*Mapper.xml #这里是mapper的配置文件
   type-aliases-package: com.rui.cn.entity #这里是实体类的包
# tx-lcn
tx-lcn:
#  aspect:
#    log:
#      file-path: logs/.txlcn/cloud-consumer
  client:
    manager-address: 127.0.0.1:8070
    resource-order: 1
  logger:
    enabled: true
  message:
    netty:
      wait-time: 5000
  springcloud:
    loadbalance:
      enabled: true
eureka:
  client: # 客户端进行Eureka注册的配置
    security:
      basic:
        user: admin
        password: admin
    service-url:
      #defaultZone: http://${eureka.client.security.basic.user}:${eureka.client.security.basic.password}@127.0.0.1:8761/eureka
      defaultZone: http://eureka.springcloud.cn/eureka
  instance:
    lease-renewal-interval-in-seconds: 30 # 表示eureka client发送心跳给server端的频率。若在lease-expiration-duration-in-seconds后，server端没有收到client的心跳，则将摘除该instance（默认是30秒）
    lease-expiration-duration-in-seconds: 90 # ，表示eureka server至上一次收到client的心跳之后，等待下一次心跳的超时时间（默认是90秒）
    instance-id: ${spring.application.name}-${server.port}  # 在信息列表时显示主机名称
    prefer-ip-address: true     # 访问的路径变为IP地址

info:  #设置eureka注册中心得info信息
  app.name: cloud-feign-consumer
  company.name: com.rui.cn
  build.artifactId: $project.artifactId$
  build.version: $project.version$

#feign的请求压缩功能
feign:
 hystrix:
   enabled: true  #开启hytrix
 okhttp:
   enabled: false  #实际应用中发现okhttp不支持 get请求参数放在body中
 httpclient:
   enabled: true #使用httpclient替换默认的feignclient
 compression:
   request:
     enabled: true
     mime-types:
      --text/xml
      --application/xml
      --application/json # 配置压缩支持的MIME TYPE
     min-request-size: 2048  # 配置压缩数据大小的下限
   response:
     enabled: true # 配置响应GZIP压缩
 client: #连接的超时 读取时间 通常要小于 hystrix的超时时间
   config:
     default:
       errorDecoder: com.rui.cn.hystrixconfig.FeignErrorDecoder
       connectTimeout: 5000
       readTimeout: 5000
       loggerLecvel: basic
# ribbon配置
ribbon:
 eager-load:
   enabled: true #ribbob开启饿加载
   clients: CLOUD-PROVIDER
logging:
  Level:
    com.rui.cn.feignclients.*: debug
# hystrix配置
hystrix:
 command:
   fallbackcmd:
     execution:
       isolation:
         thread:
           timeoutInMilliseconds: 5000
#feigen在默认的情况下使用的是jdk原生的URLConnection发送http请求，没有连接池，但是每个地址都会保持一个长链接，可以使用htppclient okhttp替换默认的client节省资源

#当feign和ribbon整合了hystrix之后可能会出现首次调用失败的问题，原因如下：
#  -- hystix默认超时时间是1s，在此时间内未作出反应，将进入fallback代码块，由于bean的装备机制是懒加载，feign首次调用都会比较慢
#解决方案：
#  -- 延长hystrix的超时时间hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds:50000
#  -- 禁用hystrix的超时时间hystrix.command.default.execution.timout.enabled:false
#  -- 直接关闭hytrix feign.hystrix.enabled: false
# hystix 官网配置 https://github.com/Netflix/Hystrix/wiki/Configuration